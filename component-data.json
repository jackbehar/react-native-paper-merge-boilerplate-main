{"./src/components/Card/Actions/Actions.tsx":[{"description":"@uxpindocurl https://callstack.github.io/react-native-paper/docs/components/Card/CardActions\n@uxpindescription A component to show a list of actions inside a Card.\n@uxpinnamespace Card","methods":[],"displayName":"Actions","props":{"children":{"required":true,"tsType":{"name":"ReactNode"},"description":"The Action of Card.Action."},"style":{"required":false,"tsType":{"name":"object"},"description":"Style of the container component."},"theme":{"required":false,"tsType":{"name":"object"},"description":"Optional theme prop."}}}],"./src/components/Button/Button.tsx":[{"description":"@uxpindocurl https://callstack.github.io/react-native-paper/docs/components/Button/\n@uxpindescription A button is component that the user can press to trigger an action.","methods":[],"displayName":"Button","props":{"children":{"required":true,"tsType":{"name":"ReactNode"},"description":"Label text for the button.\n@uxpinpropname label"},"mode":{"required":false,"tsType":{"name":"union","raw":"'text' | 'outlined' | 'contained' | 'elevated' | 'contained-tonal'","elements":[{"name":"literal","value":"'text'"},{"name":"literal","value":"'outlined'"},{"name":"literal","value":"'contained'"},{"name":"literal","value":"'elevated'"},{"name":"literal","value":"'contained-tonal'"}]},"description":"Mode of the button. Determines the visual style."},"dark":{"required":false,"tsType":{"name":"boolean"},"description":"Whether the button uses a dark theme."},"compact":{"required":false,"tsType":{"name":"boolean"},"description":"Whether the button uses a compact style."},"color":{"required":false,"tsType":{"name":"string"},"description":"@deprecated Deprecated in v5.x - use `buttonColor` or `textColor` instead.\nCustom text or background color.\n@uxpinignoreprop"},"buttonColor":{"required":false,"tsType":{"name":"string"},"description":"Custom background color for the button.\n@uxpincontroltype color"},"textColor":{"required":false,"tsType":{"name":"string"},"description":"Custom text color for the button.\n@uxpincontroltype color"},"rippleColor":{"required":false,"tsType":{"name":"string"},"description":"Color for the ripple effect (Android).\n@uxpincontroltype color"},"loading":{"required":false,"tsType":{"name":"boolean"},"description":"Displays a loading indicator inside the button."},"icon":{"required":false,"tsType":{"name":"string"},"description":"Icon to display alongside the button text."},"disabled":{"required":false,"tsType":{"name":"boolean"},"description":"Disables the button, making it unpressable."},"uppercase":{"required":false,"tsType":{"name":"boolean"},"description":"Converts the button text to uppercase."},"background":{"required":false,"tsType":{"name":"object"},"description":"Configures the ripple background effect on Android."},"accessibilityLabel":{"required":false,"tsType":{"name":"string"},"description":"Accessibility label for screen readers."},"accessibilityHint":{"required":false,"tsType":{"name":"string"},"description":"Accessibility hint for screen readers."},"accessibilityRole":{"required":false,"tsType":{"name":"union","raw":"'none'\n| 'button'\n| 'togglebutton'\n| 'link'\n| 'search'\n| 'image'\n| 'keyboardkey'\n| 'text'\n| 'adjustable'\n| 'imagebutton'\n| 'header'\n| 'summary'\n| 'alert'\n| 'checkbox'\n| 'combobox'\n| 'menu'\n| 'menubar'\n| 'menuitem'\n| 'progressbar'\n| 'radio'\n| 'radiogroup'\n| 'scrollbar'\n| 'spinbutton'\n| 'switch'\n| 'tab'\n| 'tabbar'\n| 'tablist'\n| 'timer'\n| 'list'\n| 'toolbar'","elements":[{"name":"literal","value":"'none'"},{"name":"literal","value":"'button'"},{"name":"literal","value":"'togglebutton'"},{"name":"literal","value":"'link'"},{"name":"literal","value":"'search'"},{"name":"literal","value":"'image'"},{"name":"literal","value":"'keyboardkey'"},{"name":"literal","value":"'text'"},{"name":"literal","value":"'adjustable'"},{"name":"literal","value":"'imagebutton'"},{"name":"literal","value":"'header'"},{"name":"literal","value":"'summary'"},{"name":"literal","value":"'alert'"},{"name":"literal","value":"'checkbox'"},{"name":"literal","value":"'combobox'"},{"name":"literal","value":"'menu'"},{"name":"literal","value":"'menubar'"},{"name":"literal","value":"'menuitem'"},{"name":"literal","value":"'progressbar'"},{"name":"literal","value":"'radio'"},{"name":"literal","value":"'radiogroup'"},{"name":"literal","value":"'scrollbar'"},{"name":"literal","value":"'spinbutton'"},{"name":"literal","value":"'switch'"},{"name":"literal","value":"'tab'"},{"name":"literal","value":"'tabbar'"},{"name":"literal","value":"'tablist'"},{"name":"literal","value":"'timer'"},{"name":"literal","value":"'list'"},{"name":"literal","value":"'toolbar'"}]},"description":"Accessibility role of the button, defaults to \"button\"."},"onPress":{"required":false,"tsType":{"name":"signature","type":"function","raw":"() => void","signature":{"arguments":[],"return":{"name":"void"}}},"description":"Function to execute on press."},"onPressIn":{"required":false,"tsType":{"name":"signature","type":"function","raw":"() => void","signature":{"arguments":[],"return":{"name":"void"}}},"description":"Function to execute when the button is pressed in."},"onPressOut":{"required":false,"tsType":{"name":"signature","type":"function","raw":"() => void","signature":{"arguments":[],"return":{"name":"void"}}},"description":"Function to execute when the button is pressed out."},"onLongPress":{"required":false,"tsType":{"name":"signature","type":"function","raw":"() => void","signature":{"arguments":[],"return":{"name":"void"}}},"description":"Function to execute on long press."},"delayLongPress":{"required":false,"tsType":{"name":"number"},"description":"Delay for triggering the long press event, in milliseconds."},"contentStyle":{"required":false,"tsType":{"name":"object"},"description":"Custom style for the button's inner content."},"maxFontSizeMultiplier":{"required":false,"tsType":{"name":"number"},"description":"Specifies the largest font size multiplier allowed."},"style":{"required":false,"tsType":{"name":"object"},"description":"Custom style for the button's container.\n@uxpincontroltype css"},"labelStyle":{"required":false,"tsType":{"name":"object"},"description":"Custom style for the button's text.\n@uxpincontroltype css"},"theme":{"required":false,"tsType":{"name":"object"},"description":"Optional theme override for the button."},"touchableRef":{"required":false,"tsType":{"name":"object"},"description":"Ref for the button's touchable component."},"testID":{"required":false,"tsType":{"name":"string"},"description":"Test ID used for end-to-end testing."}}}],"./src/components/Card/Cover/Cover.tsx":[{"description":"@uxpindocurl https://callstack.github.io/react-native-paper/docs/components/Card/CardCover\n@uxpindescription A component to show a cover image inside a Card.\n@uxpinnamespace Card","methods":[],"displayName":"Cover","props":{"children":{"required":true,"tsType":{"name":"ReactNode"},"description":"The content of Card.Content."},"style":{"required":false,"tsType":{"name":"object"},"description":"Style of the container component."},"source":{"required":false,"tsType":{"name":"string"},"description":"@uxpincontroltype image"}}}],"./src/components/Card/Title/Title.tsx":[{"description":"@uxpindocurl https://callstack.github.io/react-native-paper/docs/components/Card/CardTitle\n@uxpindescription A component to show a title, subtitle and an avatar inside a Card.\n@uxpinnamespace Card","methods":[],"displayName":"Title","props":{"title":{"required":true,"tsType":{"name":"ReactNode"},"description":"Text for the title. Accepts a string or a <Text>-based node."},"titleStyle":{"required":false,"tsType":{"name":"object"},"description":"Style for the title."},"titleNumberOfLines":{"required":false,"tsType":{"name":"number"},"description":"Number of lines for the title.\n@default 1"},"titleVariant":{"required":false,"tsType":{"name":"string"},"description":"Title text variant defines appropriate text styles for type role and size.\n@default 'bodyLarge'"},"subtitle":{"required":false,"tsType":{"name":"ReactNode"},"description":"Text for the subtitle. Accepts a string or a <Text>-based node."},"subtitleStyle":{"required":false,"tsType":{"name":"object"},"description":"Style for the subtitle."},"subtitleNumberOfLines":{"required":false,"tsType":{"name":"number"},"description":"Number of lines for the subtitle.\n@default 1"},"subtitleVariant":{"required":false,"tsType":{"name":"string"},"description":"Subtitle text variant defines appropriate text styles for type role and size.\n@default 'bodyMedium'"},"left":{"required":false,"tsType":{"name":"signature","type":"function","raw":"(props: { size: number }) => ReactNode","signature":{"arguments":[{"type":{"name":"signature","type":"object","raw":"{ size: number }","signature":{"properties":[{"key":"size","value":{"name":"number","required":true}}]}},"name":"props"}],"return":{"name":"ReactNode"}}},"description":"Callback which returns a React element to display on the left side."},"leftStyle":{"required":false,"tsType":{"name":"object"},"description":"Style for the left element wrapper."},"right":{"required":false,"tsType":{"name":"signature","type":"function","raw":"(props: { size: number }) => ReactNode","signature":{"arguments":[{"type":{"name":"signature","type":"object","raw":"{ size: number }","signature":{"properties":[{"key":"size","value":{"name":"number","required":true}}]}},"name":"props"}],"return":{"name":"ReactNode"}}},"description":"Callback which returns a React element to display on the right side."},"rightStyle":{"required":false,"tsType":{"name":"object"},"description":"Style for the right element wrapper."},"titleMaxFontSizeMultiplier":{"required":false,"tsType":{"name":"number"},"description":"Specifies the largest possible scale a title font can reach."},"subtitleMaxFontSizeMultiplier":{"required":false,"tsType":{"name":"number"},"description":"Specifies the largest possible scale a subtitle font can reach."},"style":{"required":false,"tsType":{"name":"object"},"description":"Style of the container component."},"theme":{"required":false,"tsType":{"name":"object"},"description":"Optional theme prop."}}}],"./src/components/TextInput/TextInput.tsx":[{"description":"@uxpindocurl https://callstack.github.io/react-native-paper/docs/components/TextInput/\n@uxpindescription A component to allow users to input text.","methods":[],"displayName":"TextInput"}],"./src/components/Card/Content/Content.tsx":[{"description":"@uxpindocurl https://callstack.github.io/react-native-paper/docs/components/Card/CardContent\n@uxpindescription A component to show content inside a Card.\n@uxpinnamespace Card","methods":[],"displayName":"Content","props":{"children":{"required":true,"tsType":{"name":"ReactNode"},"description":"The content of Card.Content."},"style":{"required":false,"tsType":{"name":"object"},"description":"Style of the container component."}}}],"./src/components/Card/Card.tsx":[{"description":"@uxpindocurl https://callstack.github.io/react-native-paper/docs/components/Card/\n@uxpindescription A card is a sheet of material that serves as an entry point to more detailed information.","methods":[{"name":"Actions","docblock":null,"modifiers":["static"],"params":[{"name":"props","optional":false,"type":{"name":"CardActionsProps","alias":"CardActionsProps"}}],"returns":null},{"name":"Title","docblock":null,"modifiers":["static"],"params":[{"name":"props","optional":false,"type":{"name":"CardTitleProps","alias":"CardTitleProps"}}],"returns":null},{"name":"Content","docblock":null,"modifiers":["static"],"params":[{"name":"props","optional":false,"type":{"name":"CardContentProps","alias":"CardContentProps"}}],"returns":null},{"name":"Cover","docblock":null,"modifiers":["static"],"params":[{"name":"props","optional":false,"type":{"name":"CardCoverProps","alias":"CardCoverProps"}}],"returns":null}],"displayName":"Card","props":{"mode":{"required":false,"tsType":{"name":"union","raw":"'elevated' | 'outlined' | 'contained'","elements":[{"name":"literal","value":"'elevated'"},{"name":"literal","value":"'outlined'"},{"name":"literal","value":"'contained'"}]},"description":"Mode of the Card.\n\n- `elevated`: Card with elevation.\n- `contained`: Card without outline and elevation. Available in v5.x with theme version 3.\n- `outlined`: Card with an outline.\n\n@default 'elevated'"},"children":{"required":true,"tsType":{"name":"ReactNode"},"description":"Content of the Card."},"onLongPress":{"required":false,"tsType":{"name":"signature","type":"function","raw":"() => void","signature":{"arguments":[],"return":{"name":"void"}}},"description":"Function to execute on long press."},"onPress":{"required":false,"tsType":{"name":"signature","type":"function","raw":"(e: any) => void","signature":{"arguments":[{"type":{"name":"any"},"name":"e"}],"return":{"name":"void"}}},"description":"Function to execute on press."},"onPressIn":{"required":false,"tsType":{"name":"signature","type":"function","raw":"(e: any) => void","signature":{"arguments":[{"type":{"name":"any"},"name":"e"}],"return":{"name":"void"}}},"description":"Function to execute as soon as the touchable element is pressed and invoked even before onPress."},"onPressOut":{"required":false,"tsType":{"name":"signature","type":"function","raw":"(e: any) => void","signature":{"arguments":[{"type":{"name":"any"},"name":"e"}],"return":{"name":"void"}}},"description":"Function to execute as soon as the touch is released even before onPress."},"delayLongPress":{"required":false,"tsType":{"name":"number"},"description":"The number of milliseconds a user must touch the element before executing onLongPress."},"disabled":{"required":false,"tsType":{"name":"boolean"},"description":"If true, disable all interactions for this component."},"elevation":{"required":false,"tsType":{"name":"union","raw":"0 | 1 | 2 | 3 | 4 | 5","elements":[{"name":"literal","value":"0"},{"name":"literal","value":"1"},{"name":"literal","value":"2"},{"name":"literal","value":"3"},{"name":"literal","value":"4"},{"name":"literal","value":"5"}]},"description":"Changes Card shadow and background on iOS and Android.\n\n@default 1"},"contentStyle":{"required":false,"tsType":{"name":"object"},"description":"Style of card's inner content."},"style":{"required":false,"tsType":{"name":"object"},"description":"Style of the Card."},"testID":{"required":false,"tsType":{"name":"string"},"description":"Pass down testID from card props to touchable.\n\n@default 'card'"},"accessible":{"required":false,"tsType":{"name":"boolean"},"description":"Pass down accessible from card props to touchable."}}}]}